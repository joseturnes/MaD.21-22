
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------


namespace Es.Udc.DotNet.PracticaMaD.Model
{

using System;
    using System.Collections.Generic;
    
public partial class Comment
{

    public long commentId { get; set; }

    public string content { get; set; }

    public long usrId { get; set; }

    public long imgId { get; set; }

    public System.DateTime comDate { get; set; }



    public virtual ImageUpload ImageUpload { get; set; }

    public virtual UserProfile UserProfile { get; set; }

        /// <summary>
        /// A hash code for this instance, suitable for use in hashing algorithms and data structures 
        /// like a hash table. It uses the Josh Bloch implementation from "Effective Java"
        /// Primary key of entity is not included in the hash calculation to avoid errors
        /// with Entity Framework creation of key values.
        /// </summary>
        /// <returns>
        /// Returns a hash code for this instance.
        /// </returns>
        public override int GetHashCode()
        {
            unchecked
            {
                int multiplier = 31;
                int hash = GetType().GetHashCode();

                hash = hash * multiplier + (content == null ? 0 : content.GetHashCode());

                return hash;
            }

        }

        /// <summary>
        /// Compare this object against another instance using a value approach (field-by-field) 
        /// </summary>
        /// <remarks>See http://www.loganfranken.com/blog/687/overriding-equals-in-c-part-1/ for detailed info </remarks>
        public override bool Equals(object obj)
        {

            if (ReferenceEquals(null, obj)) return false;        // Is Null?
            if (ReferenceEquals(this, obj)) return true;         // Is same object?
            if (obj.GetType() != this.GetType()) return false;   // Is same type? 

            Comment target = obj as Comment;

            return true
               && (this.commentId == target.commentId)
               && (this.content == target.content)
               && (this.usrId == target.usrId)
               && (this.imgId == target.imgId)
               ;

        }
    }

}
